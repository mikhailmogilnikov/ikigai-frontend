openapi: 3.1.0
info:
  title: Ikigai API
  version: 1.0.0
  description: API to manage Ikigai
tags:
  - name: auth
    description: Маршруты для авторизации
  - name: public
    description: Маршруты для учащихся
  - name: admin
    description: Административные маршруты
paths:
  /auth/login:
    post:
      summary: Вход в систему
      tags:
        - auth
      post:
        summary: Вход в систему
        tags:
          - auth
        requestBody:
          $ref: ../schemas/auth-schemas.yaml#/schemas/AuthLogin
        responses:
          '200':
            $ref: ../../shared/responses.yaml#/schemas/SuccessResponse
          '404':
            $ref: ../../shared/responses.yaml#/schemas/NotFoundError
  /auth/register:
    post:
      summary: Регистрация в системе
      tags:
        - auth
      post:
        summary: Регистрация в системе
        tags:
          - auth
        requestBody:
          $ref: ../schemas/auth-schemas.yaml#/schemas/AuthRegister
        responses:
          '200':
            $ref: ../../shared/responses.yaml#/schemas/SuccessResponse
          '404':
            $ref: ../../shared/responses.yaml#/schemas/NotFoundError
  /auth/logout:
    post:
      summary: Выход из системы
      tags:
        - auth
      post:
        summary: Выход из системы
        tags:
          - auth
        responses:
          '200':
            $ref: ../../shared/responses.yaml#/schemas/SuccessResponse
          '401':
            $ref: ../../shared/responses.yaml#/schemas/UnauthorizedError
  /auth/refresh:
    post:
      summary: Обновление токена
      tags:
        - auth
      post:
        summary: Обновление токена
        tags:
          - auth
        responses:
          '200':
            $ref: ../schemas/auth-schemas.yaml#/schemas/AuthRefresh
          '401':
            $ref: ../../shared/responses.yaml#/schemas/UnauthorizedError
  /courses/store:
    get:
      summary: Получить список курсов, которые можно купить в магазине
      tags:
        - public
      description: Получить список курсов, которые можно купить в магазине
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShopCourse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
  /courses/my-courses:
    get:
      summary: Получить список курсов, которые купил пользователь
      tags:
        - public
      description: Получить список курсов, которые пользователь купил
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MyCourse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
  /courses/{courseId}:
    get:
      summary: Получить курс по id
      tags:
        - public
      description: Получить информацию о курсе
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullCourse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /courses/{courseId}/lessons:
    get:
      summary: Получить список уроков в курсе
      tags:
        - public
      description: Получить список уроков в курсе
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseLessons'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /lessons/{lessonId}:
    get:
      summary: Получить урок по id
      tags:
        - public
      description: Получить содержимое урока
      parameters:
        - name: lessonId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullLesson'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /lessons/{lessonId}/complete:
    post:
      summary: Отметить урок как пройденный
      tags:
        - public
      description: Отметить урок как пройденный
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lesson_id:
                  type: string
              required:
                - lesson_id
      responses:
        '201':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /transactions:
    get:
      summary: Получить список транзакций
      tags:
        - public
      description: Получить список транзакций
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
  /users/me:
    get:
      summary: Получить информацию о себе
      tags:
        - public
      description: Получает информацию о текущем пользователе
      responses:
        '200':
          description: Информация о текущем пользователе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
  /admin/courses:
    summary: Получить список курсов
    get:
      tags:
        - admin
      summary: Получить список курсов для админа
      description: Получить список курсов для админа
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminCourse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
    post:
      summary: Создать курс
      tags:
        - admin
      description: Создать курс
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
              required:
                - title
      responses:
        '201':
          description: OK
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
  /admin/courses/{courseId}:
    get:
      summary: Получить курс по id
      tags:
        - admin
      description: Получить курс для админа
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCourseFull'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
    patch:
      summary: Обновить курс по id
      tags:
        - admin
    delete:
      summary: Удалить курс по id
      tags:
        - admin
  /admin/users:
    get:
      summary: Получить список пользователей
      tags:
        - admin
      description: Получить список пользователей для админ панели
      responses:
        '200':
          description: Список пользователей
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminUser'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
  /admin/transactions:
    get:
      summary: Получить список транзакций
      tags:
        - admin
      description: Получить список транзакций
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminTransaction'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'
components:
  schemas:
    BaseCourse:
      summary: Базовая схема курса
      description: Базовая схема курса
      type: object
      properties:
        id:
          type: number
        title:
          type: string
        image_url:
          type: string
        lessons_amount:
          type: number
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - title
        - image_url
        - lessons_amount
        - created_at
        - updated_at
    ShopCourse:
      description: Курс в списке курсов для магазина
      allOf:
        - $ref: '#/components/schemas/BaseCourse'
        - type: object
          properties:
            price:
              type: number
            modules_amount:
              type: number
          required:
            - price
            - modules_amount
    ErrorSchema:
      description: Схема ошибки
      type: object
      properties:
        message:
          type: string
        code:
          type: string
      required:
        - message
        - code
    UnauthorizedError:
      description: Ошибка авторизации
      allOf:
        - $ref: '#/components/schemas/ErrorSchema'
    MyCourse:
      description: Курс в списке курсов, которые пользователь купил
      allOf:
        - $ref: '#/components/schemas/BaseCourse'
        - type: object
          properties:
            completed_lessons_amount:
              type: number
          required:
            - completed_lessons_amount
    BaseModule:
      summary: Базовая схема модуля в курсе
      description: Базовая схема модуля в курсе
      type: object
      properties:
        id:
          type: number
        title:
          type: string
        order:
          type: number
      required:
        - id
        - title
        - order
    BaseLesson:
      summary: Базовая схема урока в курсе
      description: Базовая схема урока в курсе
      type: object
      properties:
        id:
          type: number
        title:
          type: string
        order:
          type: number
      required:
        - id
        - title
        - order
    CourseLesson:
      description: Урок в курсе
      allOf:
        - $ref: '#/components/schemas/BaseLesson'
        - type: object
          properties:
            is_completed:
              type: boolean
          required:
            - is_completed
    ModuleWithLessons:
      summary: Модуль с уроками
      description: Модуль с уроками
      allOf:
        - $ref: '#/components/schemas/BaseModule'
        - type: object
          properties:
            lessons:
              type: array
              items:
                $ref: '#/components/schemas/CourseLesson'
          required:
            - lessons
    FullCourse:
      description: Полная информация о курсе
      allOf:
        - $ref: '#/components/schemas/BaseCourse'
        - type: object
          properties:
            description:
              type: string
            price:
              type: number
            modules_amount:
              type: number
            videos_amount:
              type: number
            start_date:
              type:
                - string
                - 'null'
            is_purchased:
              type: boolean
            is_finished:
              type: boolean
            completed_lessons_amount:
              type:
                - number
                - 'null'
            modules:
              type: array
              items:
                $ref: '#/components/schemas/ModuleWithLessons'
          required:
            - description
            - price
            - modules_amount
            - videos_amount
            - start_date
            - is_purchased
            - is_finished
            - completed_lessons_amount
            - modules
    NotFoundError:
      description: Ошибка не найденного ресурса
      allOf:
        - $ref: '#/components/schemas/ErrorSchema'
    CourseLessons:
      description: Список уроков в курсе
      allOf:
        - $ref: '#/components/schemas/MyCourse'
        - type: object
          properties:
            modules:
              type: array
              items:
                $ref: '#/components/schemas/ModuleWithLessons'
          required:
            - modules
    ForbiddenError:
      description: Ошибка доступа
      allOf:
        - $ref: '#/components/schemas/ErrorSchema'
    BaseVideo:
      summary: Базовая схема видео в уроке
      description: Базовая схема видео в уроке
      type: object
      properties:
        video_url:
          type: string
        poster_url:
          type: string
      required:
        - video_url
        - poster_url
    BaseTest:
      summary: Базовая схема теста
      description: Базовая схема теста
      type: object
      properties:
        id:
          type: number
        lesson_id:
          type: number
        title:
          type: string
        order:
          type: number
      required:
        - id
        - lesson_id
        - title
        - order
    BaseTestVariant:
      summary: Базовая схема варианта ответа на тест
      description: Базовая схема варианта ответа на тест
      type: object
      properties:
        id:
          type: number
        title:
          type: string
        is_correct:
          type: boolean
        description:
          type:
            - string
            - 'null'
        order:
          type: number
      required:
        - id
        - title
        - is_correct
        - description
        - order
    TestWithVariants:
      description: Тест с вариантами ответов
      allOf:
        - $ref: '#/components/schemas/BaseTest'
        - type: object
          properties:
            variants:
              type: array
              items:
                $ref: '#/components/schemas/BaseTestVariant'
          required:
            - variants
    FullLesson:
      description: Содержимое урока
      allOf:
        - $ref: '#/components/schemas/CourseLesson'
        - type: object
          properties:
            video:
              oneOf:
                - $ref: '#/components/schemas/BaseVideo'
                - type: 'null'
            content:
              type: string
            tests:
              type: array
              items:
                $ref: '#/components/schemas/TestWithVariants'
          required:
            - video
            - content
            - tests
    Transaction:
      description: Транзакция в списке транзакций ученика
      type: object
      properties:
        id:
          type: number
        invoice_id:
          type: string
        date:
          type: string
          format: date-time
        amount:
          type: number
        title:
          type: string
      required:
        - id
        - invoice_id
        - date
        - amount
        - title
    UserRoles:
      description: Роли пользователей
      type: string
      enum:
        - student
        - admin
    BaseUser:
      description: Базовая схема пользователя
      type: object
      properties:
        id:
          type: number
        email:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        avatar_url:
          type: string
        join_date:
          type: string
        role:
          $ref: '#/components/schemas/UserRoles'
      required:
        - id
        - phone
        - first_name
        - last_name
        - avatar_url
        - join_date
        - role
    Student:
      description: Студент
      allOf:
        - $ref: '#/components/schemas/BaseUser'
        - type: object
          properties:
            completed_courses_amount:
              type: number
            completed_lessons_amount:
              type: number
            bought_courses_amount:
              type: number
          required:
            - completed_courses_amount
            - completed_lessons_amount
            - bought_courses_amount
    AdminCourse:
      description: Курс для админа в списке курсов
      allOf:
        - $ref: '#/components/schemas/BaseCourse'
        - type: object
          properties:
            is_published:
              type: boolean
            modules_amount:
              type: number
            price:
              type: number
            users_amount:
              type: number
            finished_users_amount:
              type: number
      required:
        - is_published
        - modules_amount
        - price
        - users_amount
        - finished_users_amount
    AdminLesson:
      description: Урок для админа
      allOf:
        - $ref: '#/components/schemas/BaseLesson'
        - type: object
          properties:
            is_published:
              type: boolean
          required:
            - is_published
    AdminModule:
      description: Модуль для админа
      allOf:
        - $ref: '#/components/schemas/BaseModule'
        - type: object
          properties:
            is_published:
              type: boolean
            lessons:
              type: array
              items:
                $ref: '#/components/schemas/AdminLesson'
          required:
            - is_published
            - lessons
    AdminCourseFull:
      description: Курс для админа в полном виде
      allOf:
        - $ref: '#/components/schemas/BaseCourse'
        - type: object
          properties:
            is_published:
              type: boolean
            description:
              type: string
            price:
              type: number
            modules:
              type: array
              items:
                $ref: '#/components/schemas/AdminModule'
    AdminUser:
      description: Пользователи для админ панели
      allOf:
        - $ref: '#/components/schemas/BaseUser'
        - type: object
          properties:
            course_amount:
              type: number
          required:
            - course_amount
    TransactionStatus:
      description: Статус транзакции
      type: string
      enum:
        - pending
        - confirmed
        - rejected
    AdminTransaction:
      description: Транзакция в списке транзакций ученика
      type: object
      properties:
        id:
          type: number
        invoice_id:
          type: string
        amount:
          type: number
        created_at:
          type: string
        status:
          $ref: '#/components/schemas/TransactionStatus'
        user_id:
          type: number
        course_id:
          type: number
      required:
        - id
        - invoice_id
        - amount
        - created_at
        - status
        - user_id
        - course_id
