/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router';

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as AuthGuardImport } from './routes/auth/_guard';
import { Route as AdminGuardImport } from './routes/admin/_guard';
import { Route as educationGuardImport } from './routes/(education)/_guard';
import { Route as educationGuardIndexImport } from './routes/(education)/_guard/index';
import { Route as AuthGuardSignUpImport } from './routes/auth/_guard/sign-up';
import { Route as AuthGuardSignInImport } from './routes/auth/_guard/sign-in';
import { Route as AuthGuardRecoverPasswordImport } from './routes/auth/_guard/recover-password';
import { Route as AdminGuardUsersImport } from './routes/admin/_guard/users';
import { Route as AdminGuardTransactionsImport } from './routes/admin/_guard/transactions';
import { Route as AdminGuardCoursesImport } from './routes/admin/_guard/courses';
import { Route as educationGuardTransactionsImport } from './routes/(education)/_guard/transactions';
import { Route as educationGuardShopImport } from './routes/(education)/_guard/shop';
import { Route as educationGuardProfileImport } from './routes/(education)/_guard/profile';
import { Route as educationGuardCoursesCourseImport } from './routes/(education)/_guard/courses_/$course';
import { Route as educationGuardCoursesCourseLessonsLessonImport } from './routes/(education)/_guard/courses_/$course_.lessons_.$lesson';

// Create Virtual Routes

const AuthImport = createFileRoute('/auth')();
const AdminImport = createFileRoute('/admin')();
const educationImport = createFileRoute('/(education)')();

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any);

const AdminRoute = AdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any);

const educationRoute = educationImport.update({
  id: '/(education)',
  getParentRoute: () => rootRoute,
} as any);

const AuthGuardRoute = AuthGuardImport.update({
  id: '/_guard',
  getParentRoute: () => AuthRoute,
} as any);

const AdminGuardRoute = AdminGuardImport.update({
  id: '/_guard',
  getParentRoute: () => AdminRoute,
} as any);

const educationGuardRoute = educationGuardImport.update({
  id: '/_guard',
  getParentRoute: () => educationRoute,
} as any);

const educationGuardIndexRoute = educationGuardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => educationGuardRoute,
} as any);

const AuthGuardSignUpRoute = AuthGuardSignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthGuardRoute,
} as any);

const AuthGuardSignInRoute = AuthGuardSignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthGuardRoute,
} as any);

const AuthGuardRecoverPasswordRoute = AuthGuardRecoverPasswordImport.update({
  id: '/recover-password',
  path: '/recover-password',
  getParentRoute: () => AuthGuardRoute,
} as any);

const AdminGuardUsersRoute = AdminGuardUsersImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AdminGuardRoute,
} as any);

const AdminGuardTransactionsRoute = AdminGuardTransactionsImport.update({
  id: '/transactions',
  path: '/transactions',
  getParentRoute: () => AdminGuardRoute,
} as any);

const AdminGuardCoursesRoute = AdminGuardCoursesImport.update({
  id: '/courses',
  path: '/courses',
  getParentRoute: () => AdminGuardRoute,
} as any);

const educationGuardTransactionsRoute = educationGuardTransactionsImport.update({
  id: '/transactions',
  path: '/transactions',
  getParentRoute: () => educationGuardRoute,
} as any);

const educationGuardShopRoute = educationGuardShopImport.update({
  id: '/shop',
  path: '/shop',
  getParentRoute: () => educationGuardRoute,
} as any);

const educationGuardProfileRoute = educationGuardProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => educationGuardRoute,
} as any);

const educationGuardCoursesCourseRoute = educationGuardCoursesCourseImport.update({
  id: '/courses_/$course',
  path: '/courses/$course',
  getParentRoute: () => educationGuardRoute,
} as any);

const educationGuardCoursesCourseLessonsLessonRoute = educationGuardCoursesCourseLessonsLessonImport.update({
  id: '/courses_/$course_/lessons_/$lesson',
  path: '/courses/$course/lessons/$lesson',
  getParentRoute: () => educationGuardRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(education)': {
      id: '/(education)';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof educationImport;
      parentRoute: typeof rootRoute;
    };
    '/(education)/_guard': {
      id: '/(education)/_guard';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof educationGuardImport;
      parentRoute: typeof educationRoute;
    };
    '/admin': {
      id: '/admin';
      path: '/admin';
      fullPath: '/admin';
      preLoaderRoute: typeof AdminImport;
      parentRoute: typeof rootRoute;
    };
    '/admin/_guard': {
      id: '/admin/_guard';
      path: '/admin';
      fullPath: '/admin';
      preLoaderRoute: typeof AdminGuardImport;
      parentRoute: typeof AdminRoute;
    };
    '/auth': {
      id: '/auth';
      path: '/auth';
      fullPath: '/auth';
      preLoaderRoute: typeof AuthImport;
      parentRoute: typeof rootRoute;
    };
    '/auth/_guard': {
      id: '/auth/_guard';
      path: '/auth';
      fullPath: '/auth';
      preLoaderRoute: typeof AuthGuardImport;
      parentRoute: typeof AuthRoute;
    };
    '/(education)/_guard/profile': {
      id: '/(education)/_guard/profile';
      path: '/profile';
      fullPath: '/profile';
      preLoaderRoute: typeof educationGuardProfileImport;
      parentRoute: typeof educationGuardImport;
    };
    '/(education)/_guard/shop': {
      id: '/(education)/_guard/shop';
      path: '/shop';
      fullPath: '/shop';
      preLoaderRoute: typeof educationGuardShopImport;
      parentRoute: typeof educationGuardImport;
    };
    '/(education)/_guard/transactions': {
      id: '/(education)/_guard/transactions';
      path: '/transactions';
      fullPath: '/transactions';
      preLoaderRoute: typeof educationGuardTransactionsImport;
      parentRoute: typeof educationGuardImport;
    };
    '/admin/_guard/courses': {
      id: '/admin/_guard/courses';
      path: '/courses';
      fullPath: '/admin/courses';
      preLoaderRoute: typeof AdminGuardCoursesImport;
      parentRoute: typeof AdminGuardImport;
    };
    '/admin/_guard/transactions': {
      id: '/admin/_guard/transactions';
      path: '/transactions';
      fullPath: '/admin/transactions';
      preLoaderRoute: typeof AdminGuardTransactionsImport;
      parentRoute: typeof AdminGuardImport;
    };
    '/admin/_guard/users': {
      id: '/admin/_guard/users';
      path: '/users';
      fullPath: '/admin/users';
      preLoaderRoute: typeof AdminGuardUsersImport;
      parentRoute: typeof AdminGuardImport;
    };
    '/auth/_guard/recover-password': {
      id: '/auth/_guard/recover-password';
      path: '/recover-password';
      fullPath: '/auth/recover-password';
      preLoaderRoute: typeof AuthGuardRecoverPasswordImport;
      parentRoute: typeof AuthGuardImport;
    };
    '/auth/_guard/sign-in': {
      id: '/auth/_guard/sign-in';
      path: '/sign-in';
      fullPath: '/auth/sign-in';
      preLoaderRoute: typeof AuthGuardSignInImport;
      parentRoute: typeof AuthGuardImport;
    };
    '/auth/_guard/sign-up': {
      id: '/auth/_guard/sign-up';
      path: '/sign-up';
      fullPath: '/auth/sign-up';
      preLoaderRoute: typeof AuthGuardSignUpImport;
      parentRoute: typeof AuthGuardImport;
    };
    '/(education)/_guard/': {
      id: '/(education)/_guard/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof educationGuardIndexImport;
      parentRoute: typeof educationGuardImport;
    };
    '/(education)/_guard/courses_/$course': {
      id: '/(education)/_guard/courses_/$course';
      path: '/courses/$course';
      fullPath: '/courses/$course';
      preLoaderRoute: typeof educationGuardCoursesCourseImport;
      parentRoute: typeof educationGuardImport;
    };
    '/(education)/_guard/courses_/$course_/lessons_/$lesson': {
      id: '/(education)/_guard/courses_/$course_/lessons_/$lesson';
      path: '/courses/$course/lessons/$lesson';
      fullPath: '/courses/$course/lessons/$lesson';
      preLoaderRoute: typeof educationGuardCoursesCourseLessonsLessonImport;
      parentRoute: typeof educationGuardImport;
    };
  }
}

// Create and export the route tree

interface educationGuardRouteChildren {
  educationGuardProfileRoute: typeof educationGuardProfileRoute;
  educationGuardShopRoute: typeof educationGuardShopRoute;
  educationGuardTransactionsRoute: typeof educationGuardTransactionsRoute;
  educationGuardIndexRoute: typeof educationGuardIndexRoute;
  educationGuardCoursesCourseRoute: typeof educationGuardCoursesCourseRoute;
  educationGuardCoursesCourseLessonsLessonRoute: typeof educationGuardCoursesCourseLessonsLessonRoute;
}

const educationGuardRouteChildren: educationGuardRouteChildren = {
  educationGuardProfileRoute: educationGuardProfileRoute,
  educationGuardShopRoute: educationGuardShopRoute,
  educationGuardTransactionsRoute: educationGuardTransactionsRoute,
  educationGuardIndexRoute: educationGuardIndexRoute,
  educationGuardCoursesCourseRoute: educationGuardCoursesCourseRoute,
  educationGuardCoursesCourseLessonsLessonRoute: educationGuardCoursesCourseLessonsLessonRoute,
};

const educationGuardRouteWithChildren = educationGuardRoute._addFileChildren(educationGuardRouteChildren);

interface educationRouteChildren {
  educationGuardRoute: typeof educationGuardRouteWithChildren;
}

const educationRouteChildren: educationRouteChildren = {
  educationGuardRoute: educationGuardRouteWithChildren,
};

const educationRouteWithChildren = educationRoute._addFileChildren(educationRouteChildren);

interface AdminGuardRouteChildren {
  AdminGuardCoursesRoute: typeof AdminGuardCoursesRoute;
  AdminGuardTransactionsRoute: typeof AdminGuardTransactionsRoute;
  AdminGuardUsersRoute: typeof AdminGuardUsersRoute;
}

const AdminGuardRouteChildren: AdminGuardRouteChildren = {
  AdminGuardCoursesRoute: AdminGuardCoursesRoute,
  AdminGuardTransactionsRoute: AdminGuardTransactionsRoute,
  AdminGuardUsersRoute: AdminGuardUsersRoute,
};

const AdminGuardRouteWithChildren = AdminGuardRoute._addFileChildren(AdminGuardRouteChildren);

interface AdminRouteChildren {
  AdminGuardRoute: typeof AdminGuardRouteWithChildren;
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminGuardRoute: AdminGuardRouteWithChildren,
};

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren);

interface AuthGuardRouteChildren {
  AuthGuardRecoverPasswordRoute: typeof AuthGuardRecoverPasswordRoute;
  AuthGuardSignInRoute: typeof AuthGuardSignInRoute;
  AuthGuardSignUpRoute: typeof AuthGuardSignUpRoute;
}

const AuthGuardRouteChildren: AuthGuardRouteChildren = {
  AuthGuardRecoverPasswordRoute: AuthGuardRecoverPasswordRoute,
  AuthGuardSignInRoute: AuthGuardSignInRoute,
  AuthGuardSignUpRoute: AuthGuardSignUpRoute,
};

const AuthGuardRouteWithChildren = AuthGuardRoute._addFileChildren(AuthGuardRouteChildren);

interface AuthRouteChildren {
  AuthGuardRoute: typeof AuthGuardRouteWithChildren;
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthGuardRoute: AuthGuardRouteWithChildren,
};

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren);

export interface FileRoutesByFullPath {
  '/': typeof educationGuardIndexRoute;
  '/admin': typeof AdminGuardRouteWithChildren;
  '/auth': typeof AuthGuardRouteWithChildren;
  '/profile': typeof educationGuardProfileRoute;
  '/shop': typeof educationGuardShopRoute;
  '/transactions': typeof educationGuardTransactionsRoute;
  '/admin/courses': typeof AdminGuardCoursesRoute;
  '/admin/transactions': typeof AdminGuardTransactionsRoute;
  '/admin/users': typeof AdminGuardUsersRoute;
  '/auth/recover-password': typeof AuthGuardRecoverPasswordRoute;
  '/auth/sign-in': typeof AuthGuardSignInRoute;
  '/auth/sign-up': typeof AuthGuardSignUpRoute;
  '/courses/$course': typeof educationGuardCoursesCourseRoute;
  '/courses/$course/lessons/$lesson': typeof educationGuardCoursesCourseLessonsLessonRoute;
}

export interface FileRoutesByTo {
  '/admin': typeof AdminGuardRouteWithChildren;
  '/auth': typeof AuthGuardRouteWithChildren;
  '/profile': typeof educationGuardProfileRoute;
  '/shop': typeof educationGuardShopRoute;
  '/transactions': typeof educationGuardTransactionsRoute;
  '/admin/courses': typeof AdminGuardCoursesRoute;
  '/admin/transactions': typeof AdminGuardTransactionsRoute;
  '/admin/users': typeof AdminGuardUsersRoute;
  '/auth/recover-password': typeof AuthGuardRecoverPasswordRoute;
  '/auth/sign-in': typeof AuthGuardSignInRoute;
  '/auth/sign-up': typeof AuthGuardSignUpRoute;
  '/': typeof educationGuardIndexRoute;
  '/courses/$course': typeof educationGuardCoursesCourseRoute;
  '/courses/$course/lessons/$lesson': typeof educationGuardCoursesCourseLessonsLessonRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  '/(education)': typeof educationRouteWithChildren;
  '/(education)/_guard': typeof educationGuardRouteWithChildren;
  '/admin': typeof AdminRouteWithChildren;
  '/admin/_guard': typeof AdminGuardRouteWithChildren;
  '/auth': typeof AuthRouteWithChildren;
  '/auth/_guard': typeof AuthGuardRouteWithChildren;
  '/(education)/_guard/profile': typeof educationGuardProfileRoute;
  '/(education)/_guard/shop': typeof educationGuardShopRoute;
  '/(education)/_guard/transactions': typeof educationGuardTransactionsRoute;
  '/admin/_guard/courses': typeof AdminGuardCoursesRoute;
  '/admin/_guard/transactions': typeof AdminGuardTransactionsRoute;
  '/admin/_guard/users': typeof AdminGuardUsersRoute;
  '/auth/_guard/recover-password': typeof AuthGuardRecoverPasswordRoute;
  '/auth/_guard/sign-in': typeof AuthGuardSignInRoute;
  '/auth/_guard/sign-up': typeof AuthGuardSignUpRoute;
  '/(education)/_guard/': typeof educationGuardIndexRoute;
  '/(education)/_guard/courses_/$course': typeof educationGuardCoursesCourseRoute;
  '/(education)/_guard/courses_/$course_/lessons_/$lesson': typeof educationGuardCoursesCourseLessonsLessonRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | '/'
    | '/admin'
    | '/auth'
    | '/profile'
    | '/shop'
    | '/transactions'
    | '/admin/courses'
    | '/admin/transactions'
    | '/admin/users'
    | '/auth/recover-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/courses/$course'
    | '/courses/$course/lessons/$lesson';
  fileRoutesByTo: FileRoutesByTo;
  to:
    | '/admin'
    | '/auth'
    | '/profile'
    | '/shop'
    | '/transactions'
    | '/admin/courses'
    | '/admin/transactions'
    | '/admin/users'
    | '/auth/recover-password'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/'
    | '/courses/$course'
    | '/courses/$course/lessons/$lesson';
  id:
    | '__root__'
    | '/(education)'
    | '/(education)/_guard'
    | '/admin'
    | '/admin/_guard'
    | '/auth'
    | '/auth/_guard'
    | '/(education)/_guard/profile'
    | '/(education)/_guard/shop'
    | '/(education)/_guard/transactions'
    | '/admin/_guard/courses'
    | '/admin/_guard/transactions'
    | '/admin/_guard/users'
    | '/auth/_guard/recover-password'
    | '/auth/_guard/sign-in'
    | '/auth/_guard/sign-up'
    | '/(education)/_guard/'
    | '/(education)/_guard/courses_/$course'
    | '/(education)/_guard/courses_/$course_/lessons_/$lesson';
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  educationRoute: typeof educationRouteWithChildren;
  AdminRoute: typeof AdminRouteWithChildren;
  AuthRoute: typeof AuthRouteWithChildren;
}

const rootRouteChildren: RootRouteChildren = {
  educationRoute: educationRouteWithChildren,
  AdminRoute: AdminRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
};

export const routeTree = rootRoute._addFileChildren(rootRouteChildren)._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(education)",
        "/admin",
        "/auth"
      ]
    },
    "/(education)": {
      "filePath": "(education)",
      "children": [
        "/(education)/_guard"
      ]
    },
    "/(education)/_guard": {
      "filePath": "(education)/_guard.tsx",
      "parent": "/(education)",
      "children": [
        "/(education)/_guard/profile",
        "/(education)/_guard/shop",
        "/(education)/_guard/transactions",
        "/(education)/_guard/",
        "/(education)/_guard/courses_/$course",
        "/(education)/_guard/courses_/$course_/lessons_/$lesson"
      ]
    },
    "/admin": {
      "filePath": "admin",
      "children": [
        "/admin/_guard"
      ]
    },
    "/admin/_guard": {
      "filePath": "admin/_guard.tsx",
      "parent": "/admin",
      "children": [
        "/admin/_guard/courses",
        "/admin/_guard/transactions",
        "/admin/_guard/users"
      ]
    },
    "/auth": {
      "filePath": "auth",
      "children": [
        "/auth/_guard"
      ]
    },
    "/auth/_guard": {
      "filePath": "auth/_guard.tsx",
      "parent": "/auth",
      "children": [
        "/auth/_guard/recover-password",
        "/auth/_guard/sign-in",
        "/auth/_guard/sign-up"
      ]
    },
    "/(education)/_guard/profile": {
      "filePath": "(education)/_guard/profile.tsx",
      "parent": "/(education)/_guard"
    },
    "/(education)/_guard/shop": {
      "filePath": "(education)/_guard/shop.tsx",
      "parent": "/(education)/_guard"
    },
    "/(education)/_guard/transactions": {
      "filePath": "(education)/_guard/transactions.tsx",
      "parent": "/(education)/_guard"
    },
    "/admin/_guard/courses": {
      "filePath": "admin/_guard/courses.tsx",
      "parent": "/admin/_guard"
    },
    "/admin/_guard/transactions": {
      "filePath": "admin/_guard/transactions.tsx",
      "parent": "/admin/_guard"
    },
    "/admin/_guard/users": {
      "filePath": "admin/_guard/users.tsx",
      "parent": "/admin/_guard"
    },
    "/auth/_guard/recover-password": {
      "filePath": "auth/_guard/recover-password.tsx",
      "parent": "/auth/_guard"
    },
    "/auth/_guard/sign-in": {
      "filePath": "auth/_guard/sign-in.tsx",
      "parent": "/auth/_guard"
    },
    "/auth/_guard/sign-up": {
      "filePath": "auth/_guard/sign-up.tsx",
      "parent": "/auth/_guard"
    },
    "/(education)/_guard/": {
      "filePath": "(education)/_guard/index.tsx",
      "parent": "/(education)/_guard"
    },
    "/(education)/_guard/courses_/$course": {
      "filePath": "(education)/_guard/courses_/$course.tsx",
      "parent": "/(education)/_guard"
    },
    "/(education)/_guard/courses_/$course_/lessons_/$lesson": {
      "filePath": "(education)/_guard/courses_/$course_.lessons_.$lesson.tsx",
      "parent": "/(education)/_guard"
    }
  }
}
ROUTE_MANIFEST_END */
